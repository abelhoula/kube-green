name: Test and build
on:
  pull_request:
    types: [opened]
  push:
jobs:
  tests:
    name: Test k8s ${{ matrix.k8s_version }} on os ${{matrix.os}} - go version ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: [1.17]
        os: [ubuntu-latest]
        k8s_version: ['1.23', '1.22', '1.21', '1.20', '1.19']
        include:
          - go_version: 1.17
            os: macos-latest
            k8s_version: '1.23'
    env:
      ENVTEST_K8S_VERSION: ${{matrix.k8s_version}}
    steps:
      - uses: actions/checkout@v2
      - name: Use golang ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
      - name: Go version
        run: go version
      - name: Go get dependencies
        run: go get -v -t -d ./...
      - name: Run tests
        run: make test
      - name: Vet and Build
        run: make
      - name: Send the coverage output
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.out
  docker-build:
    name: Build docker
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: kubegreen/kube-green
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ${{ env.context }}build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: '${{ env.context }}'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

