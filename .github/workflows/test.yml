name: Test and build
on:
  push:
    branches:
      - "main"
    tags:
      - '*'
  pull_request:
    branches:
      - "main"
jobs:
  tests:
    name: Test k8s ${{ matrix.k8s_version }} on os ${{matrix.os}} - go version ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: [1.19]
        os: [ubuntu-latest]
        k8s_version: ['1.25', '1.24', '1.23', '1.22', '1.21', '1.20', '1.19']
        include:
          - go_version: 1.19
            os: macos-latest
            k8s_version: '1.25'
            kind_node_version: 'v1.25.3@sha256:f52781bc0d7a19fb6c405c2af83abfeb311f130707a0e219175677e366cc45d1'
          - k8s_version: '1.25'
            kind_node_version: 'v1.25.3@sha256:f52781bc0d7a19fb6c405c2af83abfeb311f130707a0e219175677e366cc45d1'
          - k8s_version: '1.24'
            kind_node_version: 'v1.24.7@sha256:577c630ce8e509131eab1aea12c022190978dd2f745aac5eb1fe65c0807eb315'
          - k8s_version: '1.23'
            kind_node_version: 'v1.23.13@sha256:ef453bb7c79f0e3caba88d2067d4196f427794086a7d0df8df4f019d5e336b61'
          - k8s_version: '1.22'
            kind_node_version: 'v1.22.15@sha256:7d9708c4b0873f0fe2e171e2b1b7f45ae89482617778c1c875f1053d4cef2e41'
          - k8s_version: '1.21'
            kind_node_version: 'v1.21.14@sha256:9d9eb5fb26b4fbc0c6d95fa8c790414f9750dd583f5d7cee45d92e8c26670aa1'
          - k8s_version: '1.20'
            kind_node_version: 'v1.20.15@sha256:a32bf55309294120616886b5338f95dd98a2f7231519c7dedcec32ba29699394'
          - k8s_version: '1.19'
            kind_node_version: 'v1.19.16@sha256:476cb3269232888437b61deca013832fee41f9f074f9bed79f57e4280f7c48b7'
    env:
      ENVTEST_K8S_VERSION: ${{matrix.k8s_version}}
      KIND_K8S_VERSION: ${{matrix.kind_node_version}}
    steps:
      - uses: actions/checkout@v3
      - name: Use golang ${{ matrix.go_version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}
      - name: install docker
        run: brew install docker
        if: runner.os == 'macOS'
      - name: start colima
        run: colima start
        if: runner.os == 'macOS'
      - name: docker version
        run: docker version
      - name: Go version
        run: go version
      - name: Go get dependencies
        run: go get -v -t -d ./...
      - name: Run tests
        run: make test
      - name: Vet and Build
        run: make
      - name: Send the coverage output
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.out
          flag-name: go-${{matrix.go}}-k8s-${{k8s_version}}
          parallel: true
  finish:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true

  e2e:
    name: e2e test with kind
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: docker build
        run: make docker-test-build
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@main
        with:
          kubectl_version: v1.23.4
      - name: load kube-green in kind
        run: kind load docker-image kubegreen/kube-green:e2e-test --name chart-testing
      - name: Install kuttl
        run: curl -L https://github.com/kudobuilder/kuttl/releases/download/v0.11.1/kubectl-kuttl_0.11.1_linux_x86_64 -o /tmp/kubectl-kuttl
      - name: chmod +x
        run: chmod +x /tmp/kubectl-kuttl
      - name: Run tests
        run: /tmp/kubectl-kuttl test

  docker-build:
    name: Build docker
    needs: [tests, e2e]
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: kubegreen/kube-green
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{ env.context }}build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: '${{ env.context }}'
          platforms: linux/amd64,linux/arm64, linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

